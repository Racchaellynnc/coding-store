{"ast":null,"code":"import React from'react';import{connect}from'react-redux';import{withRouter}from'react-router-dom';import CustomButton from'../buttons/buttons.component';import CartItem from'../cart-item/cart-item.component';import{selectCartItems}from'../../redux/cart/cart.selectors';import{createStructuredSelector}from'reselect';import{toggleCartHidden}from'../../redux/cart/cart.actions.js';import'./cart-dropdown.styles.scss';var CartDropdown=function CartDropdown(_ref){var cartItems=_ref.cartItems,history=_ref.history,dispatch=_ref.dispatch;return/*#__PURE__*/React.createElement(\"div\",{className:\"cart-dropdown\"},/*#__PURE__*/React.createElement(\"div\",{className:\"cart-items\"},cartItems.length?cartItems.map(function(cartItem){return/*#__PURE__*/React.createElement(CartItem,{key:cartItem.id,item:cartItem});}):/*#__PURE__*/React.createElement(\"span\",{className:\"empty\"},\"Your cart is empty\")),/*#__PURE__*/React.createElement(CustomButton,{onClick:function onClick(){history.push('./checkout');dispatch(toggleCartHidden());}},\"CHECKOUT\"));};var mapStateToProps=createStructuredSelector({cartItems:selectCartItems});export default withRouter(connect(mapStateToProps)(CartDropdown));","map":{"version":3,"sources":["/Users/rachaelcoder/Desktop/Coderality/coding-store/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","connect","withRouter","CustomButton","CartItem","selectCartItems","createStructuredSelector","toggleCartHidden","CartDropdown","cartItems","history","dispatch","length","map","cartItem","id","push","mapStateToProps"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,YAAP,KAAyB,8BAAzB,CACA,MAAOC,CAAAA,QAAP,KAAqB,kCAArB,CACA,OAASC,eAAT,KAAgC,iCAAhC,CACA,OAASC,wBAAT,KAAyC,UAAzC,CACA,OAASC,gBAAT,KAAiC,kCAAjC,CACA,MAAO,6BAAP,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,UAAGC,CAAAA,SAAH,MAAGA,SAAH,CAAcC,OAAd,MAAcA,OAAd,CAAuBC,QAAvB,MAAuBA,QAAvB,oBACnB,2BAAK,SAAS,CAAC,eAAf,eACC,2BAAK,SAAS,CAAC,YAAf,EAEEF,SAAS,CAACG,MAAV,CACAH,SAAS,CAACI,GAAV,CAAc,SAAAC,QAAQ,qBACtB,oBAAC,QAAD,EAAU,GAAG,CAAEA,QAAQ,CAACC,EAAxB,CAA4B,IAAI,CAAED,QAAlC,EADsB,EAAtB,CADA,cAIC,4BAAM,SAAS,CAAC,OAAhB,uBANH,CADD,cAUC,oBAAC,YAAD,EAAc,OAAO,CAAE,kBAAK,CAC3BJ,OAAO,CAACM,IAAR,CAAa,YAAb,EACAL,QAAQ,CAACJ,gBAAgB,EAAjB,CAAR,CACC,CAHF,aAVD,CADmB,EAArB,CAkBA,GAAMU,CAAAA,eAAe,CAAGX,wBAAwB,CAAC,CAChDG,SAAS,CAAEJ,eADqC,CAAD,CAAhD,CAGA,cAAeH,CAAAA,UAAU,CAACD,OAAO,CAACgB,eAAD,CAAP,CAAyBT,YAAzB,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport CustomButton from '../buttons/buttons.component';\nimport CartItem from '../cart-item/cart-item.component';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { createStructuredSelector } from 'reselect'; \nimport { toggleCartHidden } from '../../redux/cart/cart.actions.js';\nimport './cart-dropdown.styles.scss';\n\nconst CartDropdown = ({ cartItems, history, dispatch }) => (\n\t\t<div className='cart-dropdown'>\n\t\t\t<div className='cart-items'>\n\t\t\t\t{\n\t\t\t\t\tcartItems.length ?\n\t\t\t\t\tcartItems.map(cartItem => (\n\t\t\t\t\t<CartItem key={cartItem.id} item={cartItem} />\n\t\t\t\t))\n\t\t\t\t: <span className=\"empty\">Your cart is empty</span>\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t<CustomButton onClick={()=> {\n\t\t\t\thistory.push('./checkout');\n\t\t\t\tdispatch(toggleCartHidden());\n\t\t\t\t}}>\n\t\t\t\t\tCHECKOUT</CustomButton>\n\t\t</div>\n\t);\t\nconst mapStateToProps = createStructuredSelector({\n\tcartItems: selectCartItems\n});\nexport default withRouter(connect(mapStateToProps)(CartDropdown));"]},"metadata":{},"sourceType":"module"}