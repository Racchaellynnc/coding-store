{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/form-input/form-input.styles.jsx","components/form-input/form-input.component.jsx","components/sign-in/sign-in.styles.jsx","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.styles.jsx","components/sign-up/sign-up.component.jsx","pages/signin/signin.component.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","FormGroup","styled","div","FormInputs","input","FormLabel","label","FormInput","handleChange","otherProps","className","onChange","Subtitle","span","SignInForm","Form","form","SignInTitle","h2","connect","dispatch","googleSignInStart","emailSignInStart","email","password","useState","userCredentials","setCredentials","handleSubmit","event","a","preventDefault","target","name","onSubmit","type","required","onClick","isGoogleSignIn","Title","SignUpForm","signUpStart","displayName","confirmPassword","setUserCredentials","alert","SignInAndSignUpPage","rel"],"mappings":"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","file":"static/js/9.ddbd818c.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import styled from 'styled-components';\n\nexport const FormGroup = styled.div`\n    position: relative;\n    margin: 45px 0;\n`;\n\nexport const FormInputs = styled.input`\n    background: none;\n    background-color: white;\n    color: gray;\n    font-size: 18px;\n    padding: 10px 10px 10px 5px;\n    display: block;\n    width: 100%;\n    border: none;\n    border-radius: 20px;\n    border-bottom: 1px solid gray;\n    margin: 25px -7px;\n        &:focus {\n            outline: none;\n        }\n        &:focus ~ .form-input-label {\n            @include shrinkLabel();\n        }\n    }\n    input[type='password'] {\n        letter-spacing: 0.3em;\n    }\n`;\n\nexport const FormLabel = styled.label`\n    color: gray;\n    font-size: 16px;\n    font-weight: normal;\n    position: absolute;\n    pointer-events: none;\n    left: 5px;\n    top: 10px;\n    transition: 300ms ease all;\n    \t&.shrink {\n      \t\t@include shrinkLabel();\n    \t}\n  \t}\n`;\n\n","import React from 'react';\nimport './form-input.styles.scss';\nimport { FormInputs, FormGroup, FormLabel } from './form-input.styles'\n\nconst FormInput = ({ handleChange, label, ...otherProps }) => (\n  \t<FormGroup className='group'>\n    \t<FormInputs className='form-input' onChange={handleChange} {...otherProps} />\n    \t{label ? (\n     \t\t<FormLabel\n        \t\tclassName={`${\n          \t\totherProps.value.length ? 'shrink' : ''\n        \t\t} form-input-label`}\n      \t\t\t>\n        \t\t{label}\n      \t\t</FormLabel>\n    \t) : null}\n  \t</FormGroup>\n);\n\nexport default FormInput;","import styled from 'styled-components';\n\nexport const Subtitle = styled.span`\n    text-align: center;\n    margin: auto;\n    font-size: 22px;\n    padding-bottom: 30px;\n    color: #2871a4;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n`;\n\nexport const SignInForm = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n`;\n\nexport const Form = styled.form`\n    width: 70%;\n    color: white;\n    padding: 30px;\n    background-color: #8E8E93;\n    color: #333;\n    box-shadow: 3px 3px 18px -8px #8b8b8b;\n`;\nexport const SignInTitle = styled.h2`\n  \twidth: 100%;\n    color: #2871a4 !important;\n\ttext-align: center !important;\n    margin: auto;\n    font-size: 28px;\n    justify-content: center;\n  \t@media screen and (max-width: 800px) {\n    \tpadding: 10px;\n    \tmargin-bottom: -10px;\n    \tfont-size: 10px;\n  \t}\n`;\n\n\n\n\n","import React, {useState} from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport Buttons from '../buttons/buttons.component';\nimport { SignInTitle, Subtitle, Form, SignInForm } from './sign-in.styles';\n\nimport {\n\tgoogleSignInStart,\n\temailSignInStart\n  } from '../../redux/user/user.actions';\n  \n  const SignIn = ({emailSignInStart, googleSignInStart}) => {\n\tconst [userCredentials, setCredentials ] = useState({ email: '', password: '' })\n\n\tconst { email, password } = userCredentials;\n\tconst handleSubmit = async event => {\n\t  event.preventDefault();\n  \n\t  emailSignInStart(email, password);\n\t};\n  \n\tconst handleChange = event => {\n\t  const { value, name } = event.target;\n  \n\t  setCredentials({ ...userCredentials,  [name]: value });\n\t};\n\t\treturn (\n\t\t\t<SignInForm>\n\t\t\t\t<SignInTitle> Welcome Back </SignInTitle>\n\t\t\t\t<Subtitle></Subtitle>\n\t\t\t\t<Form onSubmit={handleSubmit}>\n\t\t\t\t\t<FormInput\n\t\t\t\t\t\tclassName='form-input'\n\t\t\t\t\t\tname='email'\n\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\tlabel='email'\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<FormInput\n\t\t\t\t\t\tname='password'\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\tlabel='password'\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<div className='buttons'>\n\t\t\t\t\t\t<Buttons type='submit'> Sign in </Buttons>\n\t\t\t\t\t\t<Buttons type=\"button\" onClick={googleSignInStart} isGoogleSignIn>\n\t\t\t\t\t\t\tSign in with Google\n\t\t\t\t\t\t</Buttons>\n\t\t\t\t\t</div>\n\t\t\t\t</Form>\n\t\t\t</SignInForm>\n\t\t);\n\t}\n\nconst mapDispatchToProps = dispatch => ({\n\tgoogleSignInStart: () => dispatch(googleSignInStart()),\n\temailSignInStart: (email, password) =>\n\t  dispatch(emailSignInStart({ email, password }))\n  });\n  \n  export default connect(\n\tnull,\n\tmapDispatchToProps\n  )(SignIn);","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  \twidth: 100%;\n    display: flex;\n    color: #2871a4;\n\ttext-align: center !important;\n    margin: auto;\n    font-size: 28px;\n    justify-content: center;\n  \tmargin-bottom: 25px;\n  \t@media screen and (max-width: 800px) {\n    \tpadding: 10px;\n    \tmargin-bottom: -10px;\n    \tfont-size: 10px;\n  \t}\n`;\nexport const Subtitle = styled.span`\n    text-align: center;\n    margin: auto;\n    font-size: 22px;\n    padding-bottom: 30px;\n    color: #2871a4;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n`;\n\nexport const SignUpForm = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n`;\n\nexport const Form = styled.form`\n    width: 70%;\n    color: white;\n    padding: 30px;\n    background-color: #8E8E93;\n    color: #333;\n    box-shadow: 3px 3px 18px -8px #8b8b8b;\n`;","import React, { useState } from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../buttons/buttons.component';\nimport { Title, Subtitle, Form, SignUpForm } from './sign-up.styles';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport { connect } from 'react-redux';\n\n\nconst SignUp = ({signUpStart}) => {\n    const [userCredentials, setUserCredentials] = useState({\n        displayName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n    });\n\n    const { email, displayName, password, confirmPassword } = userCredentials;\n\n    const handleSubmit = async event => {\n        event.preventDefault();\n        \n\n        if  (password !== confirmPassword ) {\n            alert(\"passwords don't match\");\n            return;\n        }\n\n        signUpStart({ displayName, email, password });\n    };\n  \n    const handleChange = event => {\n      const { name, value } = event.target;\n\n        setUserCredentials({ ...userCredentials, [name]: value });\n    };\n        return(     \n            <SignUpForm className=\"sign-up\">\n                <Title ><b>Don't have an account yet?</b> </Title>\n                <Subtitle >SIGN UP</Subtitle>\n                <Form className=\"sign-up-form\" onSubmit={handleSubmit}>\n                    <FormInput\n                        type=\"text\"\n                        name=\"displayName\"\n                        value={displayName}\n                        onChange={handleChange}\n                        label=\"Display Name\"\n                        required\n                        />\n                    \n                    <FormInput\n                        type=\"email\"\n                        name=\"email\"\n                        value={email}\n                        onChange={handleChange}\n                        label=\"Email\"\n                        required\n                        />\n                                       \n                    <FormInput\n                        type=\"password\"\n                        name=\"password\"\n                        value={password}\n                        onChange={handleChange}\n                        label=\"Password\"\n                        required\n                        />\n                                       \n                    <FormInput\n                        type=\"password\"\n                        name=\"confirmPassword\"\n                        value={confirmPassword}\n                        onChange={handleChange}\n                        label=\"Confirm Password\"\n                        required\n                        />\n                   <CustomButton type='submit'>SIGN UP</CustomButton>\n                </Form>\n            </SignUpForm>\n        );\n    }\n\nconst mapDispatchToProps = dispatch => ({\n    signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n  });\n  \n  export default connect(\n    null,\n    mapDispatchToProps\n  )(SignUp);","import React from 'react';\nimport SignIn from '../../components/sign-in/sign-in.component';\nimport SignUp from '../../components/sign-up/sign-up.component';\n\nimport './sign-in-and-sign-up.styles.scss';\n\nconst SignInAndSignUpPage = () => (\n\t<div className='sign-in-and-sign-up'>\n\t\t<SignIn className=\"signin\" rel=\"nofollow\" />\n\t\t<SignUp rel=\"nofollow\" />\n\t</div>\n);\n\nexport default SignInAndSignUpPage;"],"sourceRoot":""}